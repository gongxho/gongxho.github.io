"use strict";(self.webpackChunkmyblog=self.webpackChunkmyblog||[]).push([[84701],{14139:(e,o,t)=>{t.r(o),t.d(o,{default:()=>r});var l=t(60329);const i=[(0,l.uE)("<p><strong>浏览器本地存储</strong></p><ul><li>在较高版本的浏览器中，js提供了sessionStorage和globalStorage。在HTML5中提供了localStorage来取代globalStorage</li><li>html5中的Web Storage包括了两种存储方式：sessionStorage和localStorage</li><li>sessionStorage用于本地存储一个会话（session）中的数据，这些数据只有在同一个会话中的页面才能访问并且当会话结束后数据也随之销毁。因此sessionStorage不是一种持久化的本地存储，仅仅是会话级别的存储</li><li>而localStorage用于持久化的本地存储，除非主动删除数据，否则数据是永远不会过期的</li></ul><p><strong>web storage和cookie的区别</strong></p><ul><li>Web Storage的概念和cookie相似，区别是它是为了更大容量存储设计的。Cookie的大小是受限的，并且每次你请求一个新的页面的时候Cookie都会被发送过去，这样无形中浪费了带宽，另外cookie还需要指定作用域，不可以跨域调用</li><li>除此之外，WebStorage拥有setItem,getItem,removeItem,clear等方法，不像cookie需要前端开发者自己封装setCookie，getCookie</li><li>但是cookie也是不可以或缺的：cookie的作用是与服务器进行交互，作为HTTP规范的一部分而存在 ，而Web Storage仅仅是为了在本地“存储”数据而生</li><li>浏览器的支持除了IE７及以下不支持外，其他标准浏览器都完全支持(ie及FF需在web服务器里运行)，值得一提的是IE总是办好事，例如IE7、IE6中的userData其实就是javascript本地存储的解决方案。通过简单的代码封装可以统一到所有的浏览器都支持web storage</li><li>localStorage和sessionStorage都具有相同的操作方法，例如setItem、getItem和removeItem等</li></ul><p><strong>cookie 和session 的区别：</strong></p><ul><li><p>1、cookie数据存放在客户的浏览器上，session数据放在服务器上。</p></li><li><p>2、cookie不是很安全，别人可以分析存放在本地的COOKIE并进行COOKIE欺骗</p><ul><li>考虑到安全应当使用session。</li></ul></li><li><p>3、session会在一定时间内保存在服务器上。当访问增多，会比较占用你服务器的性能</p><ul><li>考虑到减轻服务器性能方面，应当使用COOKIE。</li></ul></li><li><p>4、单个cookie保存的数据不能超过4K，很多浏览器都限制一个站点最多保存20个cookie。</p></li><li><p>5、所以个人建议：</p><ul><li><p>将登陆信息等重要信息存放为SESSION</p></li><li><p>其他信息如果需要保留，可以放在COOKIE中</p></li></ul></li></ul><p><strong>描述 cookies、sessionStorage 和 localStorage 的区别？</strong></p><ul><li><p>与服务器交互：</p><ul><li>cookie 是网站为了标示用户身份而储存在用户本地终端上的数据（通常经过加密）</li><li>cookie 始终会在同源 http 请求头中携带（即使不需要），在浏览器和服务器间来回传递</li><li>sessionStorage 和 localStorage 不会自动把数据发给服务器，仅在本地保存</li></ul></li><li><p>存储大小：</p></li></ul><ul><li>cookie 数据根据不同浏览器限制，大小一般不能超过 4k</li><li>sessionStorage 和 localStorage 虽然也有存储大小的限制，但比cookie大得多，可以达到5M或更大</li></ul><ul><li>有期时间： <ul><li>localStorage 存储持久数据，浏览器关闭后数据不丢失除非主动删除数据</li><li>sessionStorage 数据在当前浏览器窗口关闭后自动删除</li><li>cookie 设置的cookie过期时间之前一直有效，与浏览器是否关闭无关</li></ul></li></ul>",10)],a={},r=(0,t(13860).Z)(a,[["render",function(e,o){return(0,l.wg)(),(0,l.iD)("div",null,i)}]])},13860:(e,o)=>{o.Z=(e,o)=>{const t=e.__vccOpts||e;for(const[e,l]of o)t[e]=l;return t}},75057:(e,o,t)=>{t.r(o),t.d(o,{data:()=>l});const l=JSON.parse('{"key":"v-3e3c99f2","path":"/Interview/base/localStorage.html","title":"浏览器存储","lang":"zh-CN","frontmatter":{"title":"浏览器存储","icon":null,"date":"2022-12-15T00:00:00.000Z","category":["Interview"],"summary":"浏览器本地存储 在较高版本的浏览器中，js提供了sessionStorage和globalStorage。在HTML5中提供了localStorage来取代globalStorage; html5中的Web Storage包括了两种存储方式：sessionStorage和localStorage; sessionStorage用于本地存储一个会话（sessi","head":[["meta",{"property":"og:url","content":"https://0808200.xyz/Interview/base/localStorage.html"}],["meta",{"property":"og:site_name","content":"𝑀𝑟.𝑔𝑜𝑜𝑔𝑥ℎ"}],["meta",{"property":"og:title","content":"浏览器存储"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-01-17T08:24:10.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:published_time","content":"2022-12-15T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-01-17T08:24:10.000Z"}]]},"excerpt":"","headers":[],"git":{"createdTime":1673943850000,"updatedTime":1673943850000,"contributors":[{"name":"googxh","email":"gxh522@qq.com","commits":1}]},"readingTime":{"minutes":2.87,"words":861},"filePathRelative":"Interview/base/localStorage.md","localizedDate":"2022年12月15日"}')}}]);