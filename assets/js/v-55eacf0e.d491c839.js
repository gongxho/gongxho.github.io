"use strict";(self.webpackChunkmyblog=self.webpackChunkmyblog||[]).push([[57945],{85480:(n,s,a)=>{a.r(s),a.d(s,{default:()=>A});var t=a(78e3);const p={id:"注册小程序",tabindex:"-1"},e=(0,t._)("a",{class:"header-anchor",href:"#注册小程序","aria-hidden":"true"},"#",-1),o=(0,t.Uk)(" 注册小程序 "),c=(0,t._)("p",null,[(0,t.Uk)("每个小程序都需要在 "),(0,t._)("code",null,"app.js"),(0,t.Uk)(" 中调用 "),(0,t._)("code",null,"App"),(0,t.Uk)(" 方法注册小程序示例，绑定生命周期回调函数、错误监听和页面不存在监听函数等。")],-1),i=(0,t.Uk)("详细的参数含义和使用请参考 "),l=(0,t.Uk)("App 参考文档"),u=(0,t.Uk)("。"),d=(0,t.uE)('<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// app.js</span>\n<span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function">onLaunch</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// Do something initial when launch.</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">onShow</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// Do something when show.</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">onHide</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// Do something when hide.</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">onError</span><span class="token punctuation">(</span><span class="token parameter">msg</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">globalData</span><span class="token operator">:</span> <span class="token string">&quot;I am global data&quot;</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>整个小程序只有一个 App 实例，是全部页面共享的。</p><p>通过 <code>getApp</code> 方法获取到全局唯一的 App 示例，获取 App 上的数据或调用注册在 App 上的函数。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// xxx.js</span>\n<span class="token keyword">const</span> appInstance <span class="token operator">=</span> <span class="token function">getApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>appInstance<span class="token punctuation">.</span>globalData<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// I am global data</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="注册页面" tabindex="-1"><a class="header-anchor" href="#注册页面" aria-hidden="true">#</a> 注册页面</h2><p>对于小程序中的每个页面，都需要在页面对应的 js 文件中进行注册，指定页面的初始数据、生命周期回调、事件处理函数等。</p>',6),r={id:"使用-page-构造器注册页面",tabindex:"-1"},k=(0,t._)("a",{class:"header-anchor",href:"#使用-page-构造器注册页面","aria-hidden":"true"},"#",-1),v=(0,t.Uk)(" 使用 Page 构造器注册页面 "),m=(0,t.uE)('<p>简单的页面可以使用 <code>Page()</code> 进行构造。</p><p>代码示例:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//index.js</span>\n<span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&quot;This is page data.&quot;</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 页面创建时执行</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">onShow</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 页面出现在前台时执行</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">onReady</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 页面首次渲染完毕时执行</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">onHide</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 页面从前台变为后台时执行</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">onUnload</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 页面销毁时执行</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">onPullDownRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 触发下拉刷新时执行</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">onReachBottom</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 页面触底时执行</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">onShareAppMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 页面被用户分享时执行</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">onPageScroll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 页面滚动时执行</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">onResize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 页面尺寸变化时执行</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">onTabItemTap</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// tab 点击时执行</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>pagePath<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// 事件响应函数</span>\n  <span class="token function">viewTap</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span>\n      <span class="token punctuation">{</span>\n        <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&quot;Set some data for updating view.&quot;</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        <span class="token comment">// this is setData callback</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// 自由数据</span>\n  <span class="token literal-property property">customData</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">hi</span><span class="token operator">:</span> <span class="token string">&quot;MINA&quot;</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',3),b=(0,t.Uk)("详细的参数含义和使用请参考 "),g=(0,t.Uk)("Page 参考文档"),h=(0,t.Uk)("。"),f={id:"使用-component-构造器构造页面",tabindex:"-1"},y=(0,t._)("a",{class:"header-anchor",href:"#使用-component-构造器构造页面","aria-hidden":"true"},"#",-1),x=(0,t.Uk)(" 使用 Component 构造器构造页面 "),w=(0,t.uE)('<p><code>Page</code> 构造器适用于简单的页面。但对于复杂的页面， <code>Page</code> 构造器可能并不好用。</p><p>此时，可以使用 <code>Component</code> 构造器来构造页面。<code>Component</code> 构造器的主要区别是: 方法需要放在 <code>methods: { }</code> 里面。</p><p>代码示例:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&quot;This is page data.&quot;</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment">// 页面创建时执行</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">onPullDownRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment">// 下拉刷新时执行</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token comment">// 事件响应函数</span>\n    <span class="token function">viewTap</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment">// ...</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这种创建方式非常类似于 自定义组件 ，可以像自定义组件一样使用 <code>behaviors</code> 等高级特性。</p><p>具体细节请阅读 <code>Component</code> 构造器 章节。</p>',6),j={},A=(0,a(13860).Z)(j,[["render",function(n,s){const a=(0,t.up)("Badge"),j=(0,t.up)("RouterLink");return(0,t.wg)(),(0,t.iD)("div",null,[(0,t._)("h2",p,[e,o,(0,t.Wm)(a,{text:"重要",type:"error"})]),c,(0,t._)("p",null,[i,(0,t.Wm)(j,{to:"/code/mini-app/guide/service/app.html"},{default:(0,t.w5)((()=>[l])),_:1}),u]),d,(0,t._)("h3",r,[k,v,(0,t.Wm)(a,{text:"重要",type:"error"})]),m,(0,t._)("p",null,[b,(0,t.Wm)(j,{to:"/code/mini-app/guide/service/page.html"},{default:(0,t.w5)((()=>[g])),_:1}),h]),(0,t._)("h3",f,[y,x,(0,t.Wm)(a,{text:"初学无需了解",type:"grey"})]),w])}]])},13860:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,t]of s)a[n]=t;return a}},36532:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t=JSON.parse('{"key":"v-55eacf0e","path":"/code/mini-app/guide/service/register.html","title":"注册","lang":"zh-CN","frontmatter":{"title":"注册","icon":"config","category":["小程序"],"summary":"注册小程序 每个小程序都需要在 app.js 中调用 App 方法注册小程序示例，绑定生命周期回调函数、错误监听和页面不存在监听函数等。 详细的参数含义和使用请参考 App 参考文档。 整个小程序只有一个 App 实例，是全部页面共享的。 通过 getApp 方法获取到全局唯一的 App 示例，获取 App 上的数据或调用注册在 App 上的函数。 注册页面","head":[["meta",{"property":"og:url","content":"https://0808200.xyz/code/mini-app/guide/service/register.html"}],["meta",{"property":"og:site_name","content":"𝑀𝑟.𝐺𝑜𝑜𝑔𝑥ℎ"}],["meta",{"property":"og:title","content":"注册"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-06-27T09:33:50.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2022-06-27T09:33:50.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"注册小程序","slug":"注册小程序","children":[]},{"level":2,"title":"注册页面","slug":"注册页面","children":[{"level":3,"title":"使用 Page 构造器注册页面","slug":"使用-page-构造器注册页面","children":[]},{"level":3,"title":"使用 Component 构造器构造页面","slug":"使用-component-构造器构造页面","children":[]}]}],"git":{"createdTime":1656322430000,"updatedTime":1656322430000,"contributors":[{"name":"googxh","email":"gxh522@qq.com","commits":1}]},"readingTime":{"minutes":2.09,"words":627},"filePathRelative":"code/mini-app/guide/service/register.md","localizedDate":"2022年6月27日"}')}}]);