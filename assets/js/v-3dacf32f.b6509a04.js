"use strict";(self.webpackChunkmyblog=self.webpackChunkmyblog||[]).push([[76409],{69730:(e,t,a)=>{a.r(t),a.d(t,{default:()=>u});var o=a(60329);const r=a.p+"assets/img/configure-debug.e9b7e87e.gif",n=a.p+"assets/img/node-debug.e8307b1b.gif",i=a.p+"assets/img/debug-data-inspection.7609e302.gif",d=(0,o._)("h2",{id:"配置调试器",tabindex:"-1"},[(0,o._)("a",{class:"header-anchor",href:"#配置调试器","aria-hidden":"true"},"#"),(0,o.Uk)(" 配置调试器")],-1),l=(0,o._)("code",null,"Ctrl + Shift + P",-1),s=(0,o._)("strong",null,"调试: 打开 launch.json",-1),c=(0,o._)("code",null,"launch.json",-1),g={href:"https://code.visualstudio.com/docs/editor/debugging",target:"_blank",rel:"noopener noreferrer"},p=(0,o.uE)('<p><img src="'+r+'" alt="配置调试"></p><h2 id="断点并逐步执行" tabindex="-1"><a class="header-anchor" href="#断点并逐步执行" aria-hidden="true">#</a> 断点并逐步执行</h2><p>在行号旁边放置断点。使用 <strong>调试</strong> 小部件向前导航。</p><p><img src="'+n+'" alt="调试"></p><h2 id="数据检查" tabindex="-1"><a class="header-anchor" href="#数据检查" aria-hidden="true">#</a> 数据检查</h2><p>在 <strong>运行</strong> 面板和控制台中检查变量。</p><p><img src="'+i+'" alt="数据检查"></p><h2 id="内嵌值" tabindex="-1"><a class="header-anchor" href="#内嵌值" aria-hidden="true">#</a> 内嵌值</h2><p>您可以设置 <code>&quot;debug.inlineValues&quot;: true</code> 在调试器中内联查看变量值。此功能开销很大，并且可能会减慢步进速度，因此默认情况下禁用此功能。</p><h2 id="logpoints" tabindex="-1"><a class="header-anchor" href="#logpoints" aria-hidden="true">#</a> Logpoints</h2><p>日志点的行为很像断点，但它们不会在命中时暂停调试器，而是在控制台中记录一条消息。日志点对于调试无法修改或暂停的生产服务器时注入日志特别有用。</p><p>使用左侧编辑器装订线中的 <strong>添加日志点</strong> 命令添加日志点，该日志点将显示为 🔸 形状的图标。日志消息是纯文本，但可以包含要在花括号(&#39;{}&#39;)中计算的表达式。</p>',12),h={},u=(0,a(13860).Z)(h,[["render",function(e,t){const a=(0,o.up)("ExternalLinkIcon");return(0,o.wg)(),(0,o.iD)("div",null,[d,(0,o._)("p",null,[(0,o.Uk)("打开命令面板("),l,(0,o.Uk)(")，然后选择 "),s,(0,o.Uk)("，这将提示您选择与项目(Node.js，Python，C ++等)匹配的环境。这将生成一个 "),c,(0,o.Uk)(" 文件。Node.js 支持是内置的，其他环境要求安装适当的语言扩展。有关更多详细信息，请参见 "),(0,o._)("a",g,[(0,o.Uk)("调试文档"),(0,o.Wm)(a)]),(0,o.Uk)("。")]),p])}]])},13860:(e,t)=>{t.Z=(e,t)=>{const a=e.__vccOpts||e;for(const[e,o]of t)a[e]=o;return a}},6638:(e,t,a)=>{a.r(t),a.d(t,{data:()=>o});const o=JSON.parse('{"key":"v-3dacf32f","path":"/software/vscode/guide/debug.html","title":"调试","lang":"zh-CN","frontmatter":{"title":"调试","icon":"debug","category":["VS Code"],"tag":["VS Code","软件"],"summary":"配置调试器 打开命令面板(Ctrl + Shift + P)，然后选择 调试: 打开 launch.json，这将提示您选择与项目(Node.js，Python，C ++等)匹配的环境。这将生成一个 launch.json 文件。Node.js 支持是内置的，其他环境要求安装适当的语言扩展。有关更多详细信息，请参见 调试文档。 断点并逐步执行 在行号旁边放置","head":[["meta",{"property":"og:url","content":"https://0808200.xyz/software/vscode/guide/debug.html"}],["meta",{"property":"og:site_name","content":"𝑀𝑟.𝑔𝑜𝑜𝑔𝑥ℎ"}],["meta",{"property":"og:title","content":"调试"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://0808200.xyz/"}],["meta",{"property":"og:updated_time","content":"2022-06-27T09:33:50.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"调试"}],["meta",{"property":"article:tag","content":"VS Code"}],["meta",{"property":"article:tag","content":"软件"}],["meta",{"property":"article:modified_time","content":"2022-06-27T09:33:50.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"配置调试器","slug":"配置调试器","children":[]},{"level":2,"title":"断点并逐步执行","slug":"断点并逐步执行","children":[]},{"level":2,"title":"数据检查","slug":"数据检查","children":[]},{"level":2,"title":"内嵌值","slug":"内嵌值","children":[]},{"level":2,"title":"Logpoints","slug":"logpoints","children":[]}],"git":{"createdTime":1656322430000,"updatedTime":1656322430000,"contributors":[{"name":"googxh","email":"gxh522@qq.com","commits":1}]},"readingTime":{"minutes":1.14,"words":343},"filePathRelative":"software/vscode/guide/debug.md","localizedDate":"2022年6月27日"}')}}]);