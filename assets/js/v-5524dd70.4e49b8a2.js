"use strict";(self.webpackChunkmyblog=self.webpackChunkmyblog||[]).push([[14766],{19444:(e,a,n)=>{n.r(a),n.d(a,{default:()=>p});var i=n(60329);const t=[(0,i.uE)('<h2 id="掌握-小程序登录流程" tabindex="-1"><a class="header-anchor" href="#掌握-小程序登录流程" aria-hidden="true">#</a> （掌握）小程序登录流程</h2><ul><li>wx.login获取临时登录凭证code</li><li>发送code给后端，后端通过code，appid，appsecret调用微信接口，返回openid和session-key；</li><li>后端通过openid和session-key生成token返回给前端</li><li>前端把后端返回的token缓存起来</li></ul><h2 id="掌握-微信小程序双向绑定和vue的异同" tabindex="-1"><a class="header-anchor" href="#掌握-微信小程序双向绑定和vue的异同" aria-hidden="true">#</a> （掌握）微信小程序双向绑定和vue的异同？</h2><p>大体相同，但小程序直接this.data的属性是不可以同步到视图的，必须调用this.setData()方法。</p><h2 id="掌握-小程序应用的生命周期" tabindex="-1"><a class="header-anchor" href="#掌握-小程序应用的生命周期" aria-hidden="true">#</a> （掌握）小程序应用的生命周期</h2><ul><li>onLaunch() 用户首次打开小程序触发（全局只触发一次）</li><li>onShow() 小程序初始化完成后触发，小程序从后台进入前台也会触发</li><li>onHide() 小程序从前台进入后台触发</li><li>onError() 小程序发生脚本错误或者API调用失败时触发</li></ul><h2 id="掌握-小程序页面的生命周期函数" tabindex="-1"><a class="header-anchor" href="#掌握-小程序页面的生命周期函数" aria-hidden="true">#</a> （掌握）小程序页面的生命周期函数？</h2><ul><li>onLoad() 页面加载时触发，只会调用一次，可获取当前页面路径中的参数。</li><li>onShow() 页面显示/切入前台时触发，一般用来发送数据请求；</li><li>onReady() 页面初次渲染完成时触发, 只会调用一次，代表页面已可和视图层进行交互。</li><li>onHide() 页面隐藏/切入后台时触发, 如底部 tab 切换到其他页面或小程序切入后台等。</li><li>onUnload() 页面卸载时触发，如redirectTo或navigateBack到其他页面时。</li></ul><h2 id="掌握-应用与页面生命周期触发的顺序" tabindex="-1"><a class="header-anchor" href="#掌握-应用与页面生命周期触发的顺序" aria-hidden="true">#</a> （掌握）应用与页面生命周期触发的顺序</h2><p>首次进入小程序会触发应用生命周期</p><p>应用（app）onLaunch -&gt; 应用（app）onShow -&gt; 页面（page）-&gt; onLoad -&gt; 页面（page）onShow -&gt; 页面（page）onReady</p><h2 id="掌握-简述微信小程序原理" tabindex="-1"><a class="header-anchor" href="#掌握-简述微信小程序原理" aria-hidden="true">#</a> （掌握）简述微信小程序原理</h2><p>小程序本质就是一个单页面应用，所有的页面渲染和事件处理，都在一个页面内进行，但又可以通过微信客户端调用原生的各种接口；</p><p>它的架构，是数据驱动的架构模式，它的UI和数据是分离的，所有的页面更新，都需要通过对数据的更改来实现；</p><p>它从技术讲和现有的前端开发差不多，采用JavaScript、WXML、WXSS三种技术进行开发；</p><p>功能可分为webview和appService两个部分；</p><p>webview用来展现UI，appService有来处理业务逻辑、数据及接口调用；</p><p>两个部分在两个进程中运行，通过系统层JSBridge实现通信，实现UI的渲染、事件的处理等。</p><h2 id="掌握-小程序导入外联样式的方法" tabindex="-1"><a class="header-anchor" href="#掌握-小程序导入外联样式的方法" aria-hidden="true">#</a> （掌握）小程序导入外联样式的方法？</h2><p>使用 <code>@import</code> 标识符来导入外联样式。<code>@import</code> 后跟需要导入的外联样式表的相对路径，用<code>;</code>表示语句结束</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>@<span class="token keyword">import</span> <span class="token string">&#39;./base.wxss&#39;</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="掌握-哪些方法可以用来提高微信小程序的应用速度" tabindex="-1"><a class="header-anchor" href="#掌握-哪些方法可以用来提高微信小程序的应用速度" aria-hidden="true">#</a> （掌握）哪些方法可以用来提高微信小程序的应用速度</h2><p>1、提高页面加载速度</p><p>2、用户行为预测</p><p>3、减少默认 data 的大小</p><p>4、组件化方案</p><h2 id="掌握-webview中的页面怎么跳回小程序中" tabindex="-1"><a class="header-anchor" href="#掌握-webview中的页面怎么跳回小程序中" aria-hidden="true">#</a> （掌握）webview中的页面怎么跳回小程序中？</h2><p>首先要引入最新版的jweixin-1.3.2.js，然后：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>wx<span class="token punctuation">.</span>miniProgram<span class="token punctuation">.</span><span class="token function">navigateTo</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;/pages/login/login&#39;</span><span class="token operator">+</span><span class="token string">&#39;$params&#39;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="掌握-如何实现下拉刷新" tabindex="-1"><a class="header-anchor" href="#掌握-如何实现下拉刷新" aria-hidden="true">#</a> （掌握）如何实现下拉刷新？</h2><p>首先在全局 config 中的 window配置 enablePullDownRefresh ，在 Page 中定义onPullDownRefresh 钩子函数,到达下拉刷新条件后，该钩子函数执行，发起请求方法 请求返回后，调用wx.stopPullDownRefresh停止下拉刷新。</p><h2 id="掌握-小程序的事件" tabindex="-1"><a class="header-anchor" href="#掌握-小程序的事件" aria-hidden="true">#</a> （掌握）小程序的事件</h2><p>1、事件分类</p><p>冒泡事件：当一个组件上的事件被触发后，该事件会向父节点传递。</p><p>非冒泡事件：当一个组件上的事件被触发后，该事件不会向父节点传递。</p><p>2、事件的绑定</p><p>事件绑定的写法同组件的属性，以 key、value 的形式。</p><p>key 以bind或catch开头，然后跟上事件的类型，如bindtap、catchtouchstart。</p><p>value 是一个字符串，需要在对应的 Page 中定义同名的函数。不然当触发事件的时候会报错。</p><p>bind事件绑定不会阻止冒泡事件向上冒泡，catch事件绑定可以阻止冒泡事件向上冒泡。</p><p>3、如何实现下拉刷新</p><p>监听用户下拉刷新事件。</p><p>需要在app.json的window (opens new window)选项中或页面配置中开启enablePullDownRefresh。</p><p>可以通过wx.startPullDownRefresh (opens new window)触发下拉刷新，调用后触发下拉刷新动画，效果与用户手动下拉刷新一致。</p><p>当处理完数据刷新后，wx.stopPullDownRefresh (opens new window)可以停止当前页面的下拉刷新。</p><h2 id="掌握-小程序的路由方式" tabindex="-1"><a class="header-anchor" href="#掌握-小程序的路由方式" aria-hidden="true">#</a> （掌握）小程序的路由方式</h2><p>**打开新页面：**调用 API wx.navigateTo</p><p>**页面重定向：**调用 API wx.redirectTo</p><p>**页面返回：**调用 API wx.navigateBack</p><p>**Tab 切换：**调用 API wx.switchTab</p><p>**重启动：**调用 API wx.reLaunch</p><h2 id="掌握-小程序页面间有哪些传递数据的方法" tabindex="-1"><a class="header-anchor" href="#掌握-小程序页面间有哪些传递数据的方法" aria-hidden="true">#</a> （掌握）小程序页面间有哪些传递数据的方法</h2><p>全局变量之中传递参数数据 微信小程序初始化时，首先会加载app.json全局样式配置文件和全局变量文件，例如下面的globalData变量。</p><p>在app.js定义全局变量后，可以在各页面间直接加载全局变量，小程序提供了getApp()方法，可以直接获取到App({...})这个全局实例对象。</p><p>使用本地缓存的方法保存全局变量,本地缓存是有存储限制的，所以建议手动删除不再需要的缓存数据。wx.setStorage</p><p>通过在跳转、重定向等转变页面时候，可以直接通过url来传送数据。</p><p><code>wx.navigateTo({ url: &#39;test?id=1&#39; })</code> 在要接收上一页面传递过来的数据的页面通过onLoad事件的options参数里面包含了上一页面所有传递过来的参数数据 <code>onLoad:function(options){}</code></p><h2 id="了解-用过云开发吗-简述其功能" tabindex="-1"><a class="header-anchor" href="#了解-用过云开发吗-简述其功能" aria-hidden="true">#</a> （了解）用过云开发吗？简述其功能</h2><p>云开发有三个基础能力：</p><ul><li>云函数：运行在微信服务器上的函数，处理微信相关操作有天然优势，如获得用户信息异常方便（以前服务端解析很麻烦）</li><li>云数据库：一个小程序可以直接操作的JSON数据库，可以直接操作数据库，不在需要服务端了。</li><li>云存储：用来存储文件和图片</li></ul>',60)],l={},p=(0,n(13860).Z)(l,[["render",function(e,a){return(0,i.wg)(),(0,i.iD)("div",null,t)}]])},13860:(e,a)=>{a.Z=(e,a)=>{const n=e.__vccOpts||e;for(const[e,i]of a)n[e]=i;return n}},88528:(e,a,n)=>{n.r(a),n.d(a,{data:()=>i});const i=JSON.parse('{"key":"v-5524dd70","path":"/Interview/h5/small_program.html","title":"小程序","lang":"zh-CN","frontmatter":{"title":"小程序","icon":null,"date":"2023-02-18T00:00:00.000Z","category":["Interview"],"summary":"（掌握）小程序登录流程\\rwx.login获取临时登录凭证code; \\r发送code给后端，后端通过code，appid，appsecret调用微信接口，返回openid和session-key；; \\r后端通过openid和session-key生成token返回给前端; \\r前端把后端返回的token缓存起来; （掌握）微信小程序双向绑定和vue的异同？ 大体","head":[["meta",{"property":"og:url","content":"https://0808200.xyz/Interview/h5/small_program.html"}],["meta",{"property":"og:site_name","content":"𝑀𝑟.𝑔𝑜𝑜𝑔𝑥ℎ"}],["meta",{"property":"og:title","content":"小程序"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-02-22T05:24:57.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:published_time","content":"2023-02-18T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-02-22T05:24:57.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"（掌握）小程序登录流程","slug":"掌握-小程序登录流程","children":[]},{"level":2,"title":"（掌握）微信小程序双向绑定和vue的异同？","slug":"掌握-微信小程序双向绑定和vue的异同","children":[]},{"level":2,"title":"（掌握）小程序应用的生命周期","slug":"掌握-小程序应用的生命周期","children":[]},{"level":2,"title":"（掌握）小程序页面的生命周期函数？","slug":"掌握-小程序页面的生命周期函数","children":[]},{"level":2,"title":"（掌握）应用与页面生命周期触发的顺序","slug":"掌握-应用与页面生命周期触发的顺序","children":[]},{"level":2,"title":"（掌握）简述微信小程序原理","slug":"掌握-简述微信小程序原理","children":[]},{"level":2,"title":"（掌握）小程序导入外联样式的方法？","slug":"掌握-小程序导入外联样式的方法","children":[]},{"level":2,"title":"（掌握）哪些方法可以用来提高微信小程序的应用速度","slug":"掌握-哪些方法可以用来提高微信小程序的应用速度","children":[]},{"level":2,"title":"（掌握）webview中的页面怎么跳回小程序中？","slug":"掌握-webview中的页面怎么跳回小程序中","children":[]},{"level":2,"title":"（掌握）如何实现下拉刷新？","slug":"掌握-如何实现下拉刷新","children":[]},{"level":2,"title":"（掌握）小程序的事件","slug":"掌握-小程序的事件","children":[]},{"level":2,"title":"（掌握）小程序的路由方式","slug":"掌握-小程序的路由方式","children":[]},{"level":2,"title":"（掌握）小程序页面间有哪些传递数据的方法","slug":"掌握-小程序页面间有哪些传递数据的方法","children":[]},{"level":2,"title":"（了解）用过云开发吗？简述其功能","slug":"了解-用过云开发吗-简述其功能","children":[]}],"git":{"createdTime":1677043497000,"updatedTime":1677043497000,"contributors":[{"name":"googxh","email":"49309686+googxho@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":5.11,"words":1532},"filePathRelative":"Interview/h5/small_program.md","localizedDate":"2023年2月18日"}')}}]);