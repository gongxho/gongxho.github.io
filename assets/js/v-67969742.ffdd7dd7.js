"use strict";(self.webpackChunkmyblog=self.webpackChunkmyblog||[]).push([[57022],{58167:(n,a,s)=>{s.r(a),s.d(a,{default:()=>o});var t=s(60329);const e=[(0,t.uE)('<ul><li>什么是<code> Ajax</code>? 如何创建一个<code>Ajax</code>？</li></ul><ul><li><p><code>AJAX(Asynchronous Javascript And XML) </code>= 异步 <code>JavaScript</code> + <code>XML</code> 在后台与服务器进行异步数据交换，不用重载整个网页，实现局部刷新。</p></li><li><p>创建 <code>ajax</code> 步骤：</p><ul><li>1.创建 <code>XMLHttpRequest</code> 对象</li><li>2.创建一个新的 <code>HTTP</code> 请求，并指定该 <code>HTTP</code> 请求的类型、验证信息</li><li>3.设置响应 <code>HTTP</code> 请求状态变化的回调函数</li><li>4.发送 <code>HTTP</code> 请求</li><li>5.获取异步调用返回的数据</li><li>6.使用 <code>JavaScript</code> 和 <code>DOM</code> 实现局部刷新</li></ul></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nxhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&quot;POST&quot;</span><span class="token punctuation">,</span> url<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nxhr<span class="token punctuation">.</span><span class="token function">setRequestHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Content-type&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;application/x-www-form-urlencoded&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nxhr<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>readyState <span class="token operator">==</span> <span class="token number">4</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token number">200</span> <span class="token operator">||</span> xhr<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token number">304</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> xhr<span class="token punctuation">.</span>responseText<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\nxhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',3)],p={},o=(0,s(13860).Z)(p,[["render",function(n,a){return(0,t.wg)(),(0,t.iD)("div",null,e)}]])},13860:(n,a)=>{a.Z=(n,a)=>{const s=n.__vccOpts||n;for(const[n,t]of a)s[n]=t;return s}},42680:(n,a,s)=>{s.r(a),s.d(a,{data:()=>t});const t=JSON.parse('{"key":"v-67969742","path":"/Interview/base/Ajax.html","title":"如何创建一个Ajax？","lang":"zh-CN","frontmatter":{"title":"如何创建一个Ajax？","icon":null,"date":"2022-12-15T00:00:00.000Z","category":["Interview"],"summary":"什么是 Ajax? 如何创建一个Ajax？; AJAX(Asynchronous Javascript And XML) = 异步 JavaScript + XML 在后台与服务器进行异步数据交换，不用重载整个网页，实现局部刷新。; 创建 ajax 步骤：; 1.创建 XMLHttpRequest 对象; 2.创建一个新的 HTTP 请求，并指定该 HTTP","head":[["meta",{"property":"og:url","content":"https://0808200.xyz/Interview/base/Ajax.html"}],["meta",{"property":"og:site_name","content":"𝑀𝑟.𝑔𝑜𝑜𝑔𝑥ℎ"}],["meta",{"property":"og:title","content":"如何创建一个Ajax？"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-01-17T08:24:10.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:published_time","content":"2022-12-15T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-01-17T08:24:10.000Z"}]]},"excerpt":"","headers":[],"git":{"createdTime":1673943850000,"updatedTime":1673943850000,"contributors":[{"name":"googxh","email":"gxh522@qq.com","commits":1}]},"readingTime":{"minutes":0.55,"words":164},"filePathRelative":"Interview/base/Ajax.md","localizedDate":"2022年12月15日"}')}}]);