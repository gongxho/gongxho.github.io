"use strict";(self.webpackChunkmyblog=self.webpackChunkmyblog||[]).push([[19343],{46633:(e,r,t)=>{t.r(r),t.d(r,{default:()=>zr});var o=t(78e3);const n=(0,o.Uk)("此处记录了"),a={href:"http://www.typescriptlang.org/docs/handbook/basic-types.html",target:"_blank",rel:"noopener noreferrer"},p=(0,o.Uk)("官方手册"),l=(0,o.Uk)("("),s={href:"https://zhongsp.gitbooks.io/typescript-handbook/content/",target:"_blank",rel:"noopener noreferrer"},h=(0,o.Uk)("中文版"),i=(0,o.Uk)(")中包含，但是本书未涉及的概念。"),c=(0,o._)("p",null,"我认为它们是一些不重要或者不属于 TypeScript 的概念，所以这里只给出一个简单的释义，详细内容可以点击链接深入理解。",-1),k={href:"http://www.typescriptlang.org/docs/handbook/basic-types.html#never",target:"_blank",rel:"noopener noreferrer"},d=(0,o.Uk)("Never"),g=(0,o.Uk)("("),b={href:"https://zhongsp.gitbooks.io/typescript-handbook/content/doc/handbook/Basic%20Types.html#never",target:"_blank",rel:"noopener noreferrer"},m=(0,o.Uk)("中文版"),_=(0,o.Uk)("): 永远不存在值的类型，一般用于错误处理函数"),f={href:"http://www.typescriptlang.org/docs/handbook/variable-declarations.html",target:"_blank",rel:"noopener noreferrer"},y=(0,o.Uk)("Variable Declarations"),U=(0,o.Uk)("("),u={href:"https://zhongsp.gitbooks.io/typescript-handbook/content/doc/handbook/Variable%20Declarations.html",target:"_blank",rel:"noopener noreferrer"},E=(0,o.Uk)("中文版"),w=(0,o.Uk)("): 使用 "),B=(0,o._)("code",null,"let",-1),W=(0,o.Uk)(" 和 "),A=(0,o._)("code",null,"const",-1),T=(0,o.Uk)(" 替代 "),v=(0,o._)("code",null,"var",-1),z=(0,o.Uk)("，这是 "),x={href:"http://es6.ruanyifeng.com/#docs/let",target:"_blank",rel:"noopener noreferrer"},S=(0,o.Uk)("ES6 的知识"),C={href:"https://zhongsp.gitbooks.io/typescript-handbook/content/doc/handbook/Functions.html#this",target:"_blank",rel:"noopener noreferrer"},D=(0,o._)("code",null,"this",-1),F=(0,o.Uk)(": 箭头函数的运用，这是 "),I={href:"http://es6.ruanyifeng.com/#docs/function",target:"_blank",rel:"noopener noreferrer"},N=(0,o.Uk)("ES6 的知识"),G={href:"http://www.typescriptlang.org/docs/handbook/generics.html#using-class-types-in-generics",target:"_blank",rel:"noopener noreferrer"},M=(0,o.Uk)("Using Class Types in Generics"),q=(0,o.Uk)("("),Z={href:"https://zhongsp.gitbooks.io/typescript-handbook/content/doc/handbook/Generics.html#%E5%9C%A8%E6%B3%9B%E5%9E%8B%E9%87%8C%E4%BD%BF%E7%94%A8%E7%B1%BB%E7%B1%BB%E5%9E%8B",target:"_blank",rel:"noopener noreferrer"},L=(0,o.Uk)("中文版"),O=(0,o.Uk)("): 创建工厂函数时，需要引用构造函数的类类型"),P={href:"http://www.typescriptlang.org/docs/handbook/type-inference.html#best-common-type",target:"_blank",rel:"noopener noreferrer"},V=(0,o.Uk)("Best common type"),J=(0,o.Uk)("("),R={href:"https://zhongsp.gitbooks.io/typescript-handbook/content/doc/handbook/Type%20Inference.html#%E6%9C%80%E4%BD%B3%E9%80%9A%E7%94%A8%E7%B1%BB%E5%9E%8B",target:"_blank",rel:"noopener noreferrer"},j=(0,o.Uk)("中文版"),H=(0,o.Uk)("): 数组的类型推论"),K={href:"http://www.typescriptlang.org/docs/handbook/type-inference.html#contextual-type",target:"_blank",rel:"noopener noreferrer"},Q=(0,o.Uk)("Contextual Type"),X=(0,o.Uk)("("),Y={href:"https://zhongsp.gitbooks.io/typescript-handbook/content/doc/handbook/Type%20Inference.html#%E4%B8%8A%E4%B8%8B%E6%96%87%E7%B1%BB%E5%9E%8B",target:"_blank",rel:"noopener noreferrer"},$=(0,o.Uk)("中文版"),ee=(0,o.Uk)("): 函数输入的类型推论"),re={href:"http://www.typescriptlang.org/docs/handbook/type-compatibility.html",target:"_blank",rel:"noopener noreferrer"},te=(0,o.Uk)("Type Compatibility"),oe=(0,o.Uk)("("),ne={href:"https://zhongsp.gitbooks.io/typescript-handbook/content/doc/handbook/Type%20Compatibility.html",target:"_blank",rel:"noopener noreferrer"},ae=(0,o.Uk)("中文版"),pe=(0,o.Uk)("): 允许不严格符合类型，只需要在一定规则下兼容即可"),le={href:"http://www.typescriptlang.org/docs/handbook/advanced-types.html#intersection-types",target:"_blank",rel:"noopener noreferrer"},se=(0,o.Uk)("Advanced Types"),he=(0,o.Uk)("("),ie={href:"https://zhongsp.gitbooks.io/typescript-handbook/content/doc/handbook/Advanced%20Types.html#%E4%BA%A4%E5%8F%89%E7%B1%BB%E5%9E%8B(intersection-types)",target:"_blank",rel:"noopener noreferrer"},ce=(0,o.Uk)("中文版"),ke=(0,o.Uk)("): 使用 "),de=(0,o._)("code",null,"&",-1),ge=(0,o.Uk)(" 将多种类型的共有部分叠加成一种类型"),be={href:"http://www.typescriptlang.org/docs/handbook/advanced-types.html#type-guards-and-differentiating-types",target:"_blank",rel:"noopener noreferrer"},me=(0,o.Uk)("Type Guards and Differentiating Types"),_e=(0,o.Uk)("("),fe={href:"https://zhongsp.gitbooks.io/typescript-handbook/content/doc/handbook/Advanced%20Types.html#%E7%B1%BB%E5%9E%8B%E4%BF%9D%E6%8A%A4%E4%B8%8E%E5%8C%BA%E5%88%86%E7%B1%BB%E5%9E%8B(type-guards-and-differentiating-types)",target:"_blank",rel:"noopener noreferrer"},ye=(0,o.Uk)("中文版"),Ue=(0,o.Uk)("): 联合类型在一些情况下被识别为特定的类型"),ue={href:"http://www.typescriptlang.org/docs/handbook/advanced-types.html#discriminated-unions",target:"_blank",rel:"noopener noreferrer"},Ee=(0,o.Uk)("Discriminated Unions"),we=(0,o.Uk)("("),Be={href:"https://zhongsp.gitbooks.io/typescript-handbook/content/doc/handbook/Advanced%20Types.html#%E5%8F%AF%E8%BE%A8%E8%AF%86%E8%81%94%E5%90%88(discriminated-unions)",target:"_blank",rel:"noopener noreferrer"},We=(0,o.Uk)("中文版"),Ae=(0,o.Uk)("): 使用 "),Te=(0,o._)("code",null,"|",-1),ve=(0,o.Uk)(" 联合多个接口的时候，通过一个共有的属性形成可辨识联合"),ze={href:"http://www.typescriptlang.org/docs/handbook/advanced-types.html#polymorphic-this-types",target:"_blank",rel:"noopener noreferrer"},xe=(0,o.Uk)("Polymorphic "),Se=(0,o._)("code",null,"this",-1),Ce=(0,o.Uk)(" types"),De=(0,o.Uk)("("),Fe={href:"https://zhongsp.gitbooks.io/typescript-handbook/content/doc/handbook/Advanced%20Types.html#%E5%A4%9A%E6%80%81%E7%9A%84this%E7%B1%BB%E5%9E%8B",target:"_blank",rel:"noopener noreferrer"},Ie=(0,o.Uk)("中文版"),Ne=(0,o.Uk)("): 父类的某个方法返回 "),Ge=(0,o._)("code",null,"this",-1),Me=(0,o.Uk)("，当子类继承父类后，子类的实例调用此方法，返回的 "),qe=(0,o._)("code",null,"this",-1),Ze=(0,o.Uk)(" 能够被 TypeScript 正确的识别为子类的实例。"),Le={href:"http://www.typescriptlang.org/docs/handbook/symbols.html",target:"_blank",rel:"noopener noreferrer"},Oe=(0,o.Uk)("Symbols"),Pe=(0,o.Uk)("("),Ve={href:"https://zhongsp.gitbooks.io/typescript-handbook/content/doc/handbook/Symbols.html",target:"_blank",rel:"noopener noreferrer"},Je=(0,o.Uk)("中文版"),Re=(0,o.Uk)("): 新原生类型，这是 "),je={href:"http://es6.ruanyifeng.com/#docs/symbol",target:"_blank",rel:"noopener noreferrer"},He=(0,o.Uk)("ES6 的知识"),Ke={href:"http://www.typescriptlang.org/docs/handbook/iterators-and-generators.html",target:"_blank",rel:"noopener noreferrer"},Qe=(0,o.Uk)("Iterators and Generators"),Xe=(0,o.Uk)("("),Ye={href:"https://zhongsp.gitbooks.io/typescript-handbook/content/doc/handbook/Iterators%20and%20Generators.html",target:"_blank",rel:"noopener noreferrer"},$e=(0,o.Uk)("中文版"),er=(0,o.Uk)("): 迭代器，这是 "),rr={href:"http://es6.ruanyifeng.com/#docs/iterator",target:"_blank",rel:"noopener noreferrer"},tr=(0,o.Uk)("ES6 的知识"),or={href:"http://www.typescriptlang.org/docs/handbook/namespaces.html",target:"_blank",rel:"noopener noreferrer"},nr=(0,o.Uk)("Namespaces"),ar=(0,o.Uk)("("),pr={href:"https://zhongsp.gitbooks.io/typescript-handbook/content/doc/handbook/Namespaces.html",target:"_blank",rel:"noopener noreferrer"},lr=(0,o.Uk)("中文版"),sr=(0,o.Uk)("): 避免全局污染，现在已被 "),hr={href:"http://es6.ruanyifeng.com/#docs/module",target:"_blank",rel:"noopener noreferrer"},ir=(0,o.Uk)("ES6 Module"),cr=(0,o.Uk)(" 替代"),kr={href:"http://www.typescriptlang.org/docs/handbook/decorators.html",target:"_blank",rel:"noopener noreferrer"},dr=(0,o.Uk)("Decorators"),gr=(0,o.Uk)("("),br={href:"https://zhongsp.gitbooks.io/typescript-handbook/content/doc/handbook/Decorators.html",target:"_blank",rel:"noopener noreferrer"},mr=(0,o.Uk)("中文版"),_r=(0,o.Uk)("): 修饰器，这是 "),fr={href:"http://es6.ruanyifeng.com/#docs/decorator",target:"_blank",rel:"noopener noreferrer"},yr=(0,o.Uk)("ES2016 的一个提案"),Ur={href:"http://www.typescriptlang.org/docs/handbook/mixins.html",target:"_blank",rel:"noopener noreferrer"},ur=(0,o.Uk)("Mixins"),Er=(0,o.Uk)("("),wr={href:"https://zhongsp.gitbooks.io/typescript-handbook/content/doc/handbook/Mixins.html",target:"_blank",rel:"noopener noreferrer"},Br=(0,o.Uk)("中文版"),Wr=(0,o.Uk)("): 一种编程模式，与 TypeScript 没有直接关系，可以参考 "),Ar={href:"http://es6.ruanyifeng.com/#docs/class#Mixin%E6%A8%A1%E5%BC%8F%E7%9A%84%E5%AE%9E%E7%8E%B0",target:"_blank",rel:"noopener noreferrer"},Tr=(0,o.Uk)("ES6 中 Mixin 模式的实现"),vr={},zr=(0,t(13860).Z)(vr,[["render",function(e,r){const t=(0,o.up)("ExternalLinkIcon");return(0,o.wg)(),(0,o.iD)("div",null,[(0,o._)("p",null,[n,(0,o._)("a",a,[p,(0,o.Wm)(t)]),l,(0,o._)("a",s,[h,(0,o.Wm)(t)]),i]),(0,o.kq)(" more "),c,(0,o._)("ul",null,[(0,o._)("li",null,[(0,o._)("a",k,[d,(0,o.Wm)(t)]),g,(0,o._)("a",b,[m,(0,o.Wm)(t)]),_]),(0,o._)("li",null,[(0,o._)("a",f,[y,(0,o.Wm)(t)]),U,(0,o._)("a",u,[E,(0,o.Wm)(t)]),w,B,W,A,T,v,z,(0,o._)("a",x,[S,(0,o.Wm)(t)])]),(0,o._)("li",null,[(0,o._)("a",C,[D,(0,o.Wm)(t)]),F,(0,o._)("a",I,[N,(0,o.Wm)(t)])]),(0,o._)("li",null,[(0,o._)("a",G,[M,(0,o.Wm)(t)]),q,(0,o._)("a",Z,[L,(0,o.Wm)(t)]),O]),(0,o._)("li",null,[(0,o._)("a",P,[V,(0,o.Wm)(t)]),J,(0,o._)("a",R,[j,(0,o.Wm)(t)]),H]),(0,o._)("li",null,[(0,o._)("a",K,[Q,(0,o.Wm)(t)]),X,(0,o._)("a",Y,[$,(0,o.Wm)(t)]),ee]),(0,o._)("li",null,[(0,o._)("a",re,[te,(0,o.Wm)(t)]),oe,(0,o._)("a",ne,[ae,(0,o.Wm)(t)]),pe]),(0,o._)("li",null,[(0,o._)("a",le,[se,(0,o.Wm)(t)]),he,(0,o._)("a",ie,[ce,(0,o.Wm)(t)]),ke,de,ge]),(0,o._)("li",null,[(0,o._)("a",be,[me,(0,o.Wm)(t)]),_e,(0,o._)("a",fe,[ye,(0,o.Wm)(t)]),Ue]),(0,o._)("li",null,[(0,o._)("a",ue,[Ee,(0,o.Wm)(t)]),we,(0,o._)("a",Be,[We,(0,o.Wm)(t)]),Ae,Te,ve]),(0,o._)("li",null,[(0,o._)("a",ze,[xe,Se,Ce,(0,o.Wm)(t)]),De,(0,o._)("a",Fe,[Ie,(0,o.Wm)(t)]),Ne,Ge,Me,qe,Ze]),(0,o._)("li",null,[(0,o._)("a",Le,[Oe,(0,o.Wm)(t)]),Pe,(0,o._)("a",Ve,[Je,(0,o.Wm)(t)]),Re,(0,o._)("a",je,[He,(0,o.Wm)(t)])]),(0,o._)("li",null,[(0,o._)("a",Ke,[Qe,(0,o.Wm)(t)]),Xe,(0,o._)("a",Ye,[$e,(0,o.Wm)(t)]),er,(0,o._)("a",rr,[tr,(0,o.Wm)(t)])]),(0,o._)("li",null,[(0,o._)("a",or,[nr,(0,o.Wm)(t)]),ar,(0,o._)("a",pr,[lr,(0,o.Wm)(t)]),sr,(0,o._)("a",hr,[ir,(0,o.Wm)(t)]),cr]),(0,o._)("li",null,[(0,o._)("a",kr,[dr,(0,o.Wm)(t)]),gr,(0,o._)("a",br,[mr,(0,o.Wm)(t)]),_r,(0,o._)("a",fr,[yr,(0,o.Wm)(t)])]),(0,o._)("li",null,[(0,o._)("a",Ur,[ur,(0,o.Wm)(t)]),Er,(0,o._)("a",wr,[Br,(0,o.Wm)(t)]),Wr,(0,o._)("a",Ar,[Tr,(0,o.Wm)(t)])])])])}]])},13860:(e,r)=>{r.Z=(e,r)=>{const t=e.__vccOpts||e;for(const[e,o]of r)t[e]=o;return t}},89247:(e,r,t)=>{t.r(r),t.d(r,{data:()=>o});const o=JSON.parse('{"key":"v-251c5e07","path":"/code/language/typescript/advanced/further-reading.html","title":"扩展阅读","lang":"zh-CN","frontmatter":{"title":"扩展阅读","icon":"quote","category":["TypeScript"],"summary":"此处记录了官方手册(中文版)中包含，但是本书未涉及的概念。\\n","head":[["meta",{"property":"og:url","content":"https://0808200.xyz/code/language/typescript/advanced/further-reading.html"}],["meta",{"property":"og:site_name","content":"𝑀𝑟.𝐺𝑜𝑜𝑔𝑥ℎ"}],["meta",{"property":"og:title","content":"扩展阅读"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-06-27T09:33:50.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2022-06-27T09:33:50.000Z"}]]},"excerpt":"<p>此处记录了<a href=\\"http://www.typescriptlang.org/docs/handbook/basic-types.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">官方手册<ExternalLinkIcon/></a>(<a href=\\"https://zhongsp.gitbooks.io/typescript-handbook/content/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">中文版<ExternalLinkIcon/></a>)中包含，但是本书未涉及的概念。</p>\\n","headers":[],"git":{"createdTime":1656322430000,"updatedTime":1656322430000,"contributors":[{"name":"googxh","email":"gxh522@qq.com","commits":1}]},"readingTime":{"minutes":2.63,"words":788},"filePathRelative":"code/language/typescript/advanced/further-reading.md","localizedDate":"2022年6月27日"}')}}]);