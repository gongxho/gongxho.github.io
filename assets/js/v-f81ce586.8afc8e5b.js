"use strict";(self.webpackChunkmyblog=self.webpackChunkmyblog||[]).push([[8947],{89820:(e,a,n)=>{n.r(a),n.d(a,{default:()=>b});var c=n(60329);const s=(0,c.uE)('<p>了解了源码的文件目录，这一节我们看看如何调试源码。</p><p>即使版本号相同（当前最新版为<code>17.0.0 RC</code>），但是<code>facebook/react</code>项目<code>master</code>分支的代码和我们使用<code>create-react-app</code>创建的项目<code>node_modules</code>下的<code>react</code>项目代码还是有些区别。</p><p>因为<code>React</code>的新代码都是直接提交到<code>master</code>分支，而<code>create-react-app</code>内的<code>react</code>使用的是稳定版的包。</p><p>为了始终使用最新版<code>React</code>教学，我们调试源码遵循以下步骤：</p><ol><li>从<code>facebook/react</code>项目<code>master</code>分支拉取最新源码</li><li>基于最新源码构建<code>react</code>、<code>scheduler</code>、<code>react-dom</code>三个包</li><li>通过<code>create-react-app</code>创建测试项目，并使用步骤2创建的包作为项目依赖的包</li></ol><h2 id="拉取源码" tabindex="-1"><a class="header-anchor" href="#拉取源码" aria-hidden="true">#</a> 拉取源码</h2><p>拉取<code>facebook/react</code>代码</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 拉取代码</span>\n<span class="token function">git</span> clone https://github.com/facebook/react.git\n\n<span class="token comment"># 如果拉取速度很慢，可以考虑如下2个方案：</span>\n\n<span class="token comment"># 1. 使用cnpm代理</span>\n<span class="token function">git</span> clone https://github.com.cnpmjs.org/facebook/react\n\n<span class="token comment"># 2. 使用码云的镜像（一天会与react同步一次）</span>\n<span class="token function">git</span> clone https://gitee.com/mirrors/react.git\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>安装依赖</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 切入到react源码所在文件夹</span>\n<span class="token builtin class-name">cd</span> react\n\n<span class="token comment"># 安装依赖</span>\n<span class="token function">yarn</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>打包<code>react</code>、<code>scheduler</code>、<code>react-dom</code>三个包为dev环境可以使用的<code>cjs</code>包。</p>',11),t=(0,c._)("code",null,"React",-1),o={href:"https://zh-hans.reactjs.org/docs/how-to-contribute.html#development-workflow",target:"_blank",rel:"noopener noreferrer"},d=(0,c.uE)('<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>\n<span class="token comment"># 执行打包命令</span>\n<span class="token function">yarn</span> build react/index,react/jsx,react-dom/index,scheduler --type<span class="token operator">=</span>NODE\n\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),r={class:"custom-container details"},l=(0,c._)("summary",null,"网络不好的同学看这里",-1),i=(0,c._)("p",null,[(0,c.Uk)("如果网络不好，执行"),(0,c._)("code",null,"yarn"),(0,c.Uk)("命令无法完成依赖安装，或者执行"),(0,c._)("code",null,"yarn build"),(0,c.Uk)("无法完成打包，可以使用我打好的包。")],-1),p=(0,c._)("p",null,[(0,c.Uk)("版本为"),(0,c._)("code",null,"17.0.0-alpha.0")],-1),m={href:"https://gitee.com/kasong/react",target:"_blank",rel:"noopener noreferrer"},u=(0,c.uE)('<p>现在源码目录<code>build/node_modules</code>下会生成最新代码的包。我们为<code>react</code>、<code>react-dom</code>创建<code>yarn link</code>。</p><blockquote><p>通过<code>yarn link</code>可以改变项目中依赖包的目录指向</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> build/node_modules/react\n<span class="token comment"># 申明react指向</span>\n<span class="token function">yarn</span> <span class="token function">link</span>\n<span class="token builtin class-name">cd</span> build/node_modules/react-dom\n<span class="token comment"># 申明react-dom指向</span>\n<span class="token function">yarn</span> <span class="token function">link</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="创建项目" tabindex="-1"><a class="header-anchor" href="#创建项目" aria-hidden="true">#</a> 创建项目</h2><p>接下来我们通过<code>create-react-app</code>在其他地方创建新项目。这里我们随意起名，比如“a-react-demo”。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>npx create-react-app a-react-demo\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在新项目中，将<code>react</code>与<code>react-dom</code>2个包指向<code>facebook/react</code>下我们刚才生成的包。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 将项目内的react react-dom指向之前申明的包</span>\n<span class="token function">yarn</span> <span class="token function">link</span> react react-dom\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>现在试试在<code>react/build/node_modules/react-dom/cjs/react-dom.development.js</code>中随意打印些东西。</p><p>在<code>a-react-demo</code>项目下执行<code>yarn start</code>。现在浏览器控制台已经可以打印出我们输入的东西了。</p><p>通过以上方法，我们的运行时代码就和<code>React</code>最新代码一致了。</p>',11),v={},b=(0,n(13860).Z)(v,[["render",function(e,a){const n=(0,c.up)("ExternalLinkIcon");return(0,c.wg)(),(0,c.iD)("div",null,[s,(0,c._)("blockquote",null,[(0,c._)("p",null,[(0,c.Uk)("我们的步骤只包含具体做法，对每一步更详细的介绍可以参考"),t,(0,c.Uk)("文档"),(0,c._)("a",o,[(0,c.Uk)("源码贡献章节"),(0,c.Wm)(n)])])]),d,(0,c._)("details",r,[l,i,p,(0,c._)("p",null,[(0,c._)("a",m,[(0,c.Uk)("地址"),(0,c.Wm)(n)])])]),u])}]])},13860:(e,a)=>{a.Z=(e,a)=>{const n=e.__vccOpts||e;for(const[e,c]of a)n[e]=c;return n}},99908:(e,a,n)=>{n.r(a),n.d(a,{data:()=>c});const c=JSON.parse('{"key":"v-f81ce586","path":"/react/preparation/source.html","title":"调试源码","lang":"zh-CN","frontmatter":{"title":"调试源码","author":"BetaSu","tag":["React"],"summary":"了解了源码的文件目录，这一节我们看看如何调试源码。 即使版本号相同（当前最新版为17.0.0 RC），但是facebook/react项目master分支的代码和我们使用create-react-app创建的项目node_modules下的react项目代码还是有些区别。 因为React的新代码都是直接提交到master分支，而create-react-ap","head":[["meta",{"property":"og:url","content":"https://0808200.xyz/react/preparation/source.html"}],["meta",{"property":"og:site_name","content":"𝑀𝑟.𝑔𝑜𝑜𝑔𝑥ℎ"}],["meta",{"property":"og:title","content":"调试源码"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-08-29T09:14:21.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"BetaSu"}],["meta",{"property":"article:tag","content":"React"}],["meta",{"property":"article:modified_time","content":"2022-08-29T09:14:21.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"拉取源码","slug":"拉取源码","children":[]},{"level":2,"title":"创建项目","slug":"创建项目","children":[]}],"git":{"createdTime":1661764461000,"updatedTime":1661764461000,"contributors":[{"name":"googxh","email":"gxh522@qq.com","commits":1}]},"readingTime":{"minutes":2.26,"words":678},"filePathRelative":"react/preparation/source.md","localizedDate":"2022年8月29日"}')}}]);