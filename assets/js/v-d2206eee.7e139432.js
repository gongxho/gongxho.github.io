"use strict";(self.webpackChunkmyblog=self.webpackChunkmyblog||[]).push([[29284],{91575:(e,n,i)=>{i.r(n),i.d(n,{default:()=>r});var l=i(60329);const t=[(0,l.uE)('<p><strong>说说你对AMD和Commonjs的理解</strong></p><ul><li>CommonJS是服务器端模块的规范，Node.js采用了这个规范。CommonJS规范加载模块是同步的，也就是说，只有加载完成，才能执行后面的操作。AMD规范则是非同步加载模块，允许指定回调函数</li><li>AMD推荐的风格通过返回一个对象做为模块对象，CommonJS的风格通过对module.exports或exports的属性赋值来达到暴露模块对象的目的</li></ul><p><strong>模块化开发怎么做？</strong></p><ul><li>立即执行函数,不暴露私有成员</li></ul><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>var module1 = (function(){\n　　　　var _count = 0;\n　　　　var m1 = function(){\n　　　　　　//...\n　　　　};\n　　　　var m2 = function(){\n　　　　　　//...\n　　　　};\n　　　　return {\n　　　　　　m1 : m1,\n　　　　　　m2 : m2\n　　　　};\n　　})();\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>AMD（Modules/Asynchronous-Definition）、CMD（Common Module Definition）规范区别？</strong></p><ul><li>Asynchronous Module Definition，异步模块定义，所有的模块将被异步加载，模块加载不影响后面语句运行。所有依赖某些模块的语句均放置在回调函数中</li></ul><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>// CMD\ndefine(function(require, exports, module) {\n    var a = require(&#39;./a&#39;)\n    a.doSomething()\n    // 此处略去 100 行\n    var b = require(&#39;./b&#39;) // 依赖可以就近书写\n    b.doSomething()\n    // ...\n})\n\n// AMD 默认推荐\ndefine([&#39;./a&#39;, &#39;./b&#39;], function(a, b) { // 依赖必须一开始就写好\n    a.doSomething()\n    // 此处略去 100 行\n    b.doSomething()\n    // ...\n})\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>对前端模块化的认识</strong></p><ul><li>AMD 是 RequireJS 在推广过程中对模块定义的规范化产出</li><li>CMD 是 SeaJS 在推广过程中对模块定义的规范化产出</li><li>AMD 是提前执行，CMD 是延迟执行</li><li>AMD推荐的风格通过返回一个对象做为模块对象，CommonJS的风格通过对module.exports或exports的属性赋值来达到暴露模块对象的目的</li></ul>',10)],s={},r=(0,i(13860).Z)(s,[["render",function(e,n){return(0,l.wg)(),(0,l.iD)("div",null,t)}]])},13860:(e,n)=>{n.Z=(e,n)=>{const i=e.__vccOpts||e;for(const[e,l]of n)i[e]=l;return i}},69186:(e,n,i)=>{i.r(n),i.d(n,{data:()=>l});const l=JSON.parse('{"key":"v-d2206eee","path":"/Interview/base/Modules.html","title":"模块化开发","lang":"zh-CN","frontmatter":{"title":"模块化开发","icon":null,"date":"2022-12-15T00:00:00.000Z","category":["Interview"],"summary":"说说你对AMD和Commonjs的理解 CommonJS是服务器端模块的规范，Node.js采用了这个规范。CommonJS规范加载模块是同步的，也就是说，只有加载完成，才能执行后面的操作。AMD规范则是非同步加载模块，允许指定回调函数; AMD推荐的风格通过返回一个对象做为模块对象，CommonJS的风格通过对module.exports或exports的","head":[["meta",{"property":"og:url","content":"https://0808200.xyz/Interview/base/Modules.html"}],["meta",{"property":"og:site_name","content":"𝑀𝑟.𝑔𝑜𝑜𝑔𝑥ℎ"}],["meta",{"property":"og:title","content":"模块化开发"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-01-17T08:24:10.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:published_time","content":"2022-12-15T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-01-17T08:24:10.000Z"}]]},"excerpt":"","headers":[],"git":{"createdTime":1673943850000,"updatedTime":1673943850000,"contributors":[{"name":"googxh","email":"gxh522@qq.com","commits":1}]},"readingTime":{"minutes":1.36,"words":407},"filePathRelative":"Interview/base/Modules.md","localizedDate":"2022年12月15日"}')}}]);