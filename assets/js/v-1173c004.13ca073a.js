"use strict";(self.webpackChunkmyblog=self.webpackChunkmyblog||[]).push([[10513],{43136:(e,r,a)=>{a.r(r),a.d(r,{default:()=>l});var t=a(60329);const s=[(0,t.uE)('<h1 id="vue-js-源码目录设计" tabindex="-1"><a class="header-anchor" href="#vue-js-源码目录设计" aria-hidden="true">#</a> Vue.js 源码目录设计</h1><p>Vue.js 的源码都在 src 目录下，其目录结构如下。</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>src\n├── compiler        # 编译相关 \n├── core            # 核心代码 \n├── platforms       # 不同平台的支持\n├── server          # 服务端渲染\n├── sfc             # .vue 文件解析\n├── shared          # 共享代码\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="compiler" tabindex="-1"><a class="header-anchor" href="#compiler" aria-hidden="true">#</a> compiler</h2><p>compiler 目录包含 Vue.js 所有编译相关的代码。它包括把模板解析成 ast 语法树，ast 语法树优化，代码生成等功能。</p><p>编译的工作可以在构建时做（借助 webpack、vue-loader 等辅助插件）；也可以在运行时做，使用包含构建功能的 Vue.js。显然，编译是一项耗性能的工作，所以更推荐前者——离线编译。</p><h2 id="core" tabindex="-1"><a class="header-anchor" href="#core" aria-hidden="true">#</a> core</h2><p>core 目录包含了 Vue.js 的核心代码，包括内置组件、全局 API 封装，Vue 实例化、观察者、虚拟 DOM、工具函数等等。</p><p>这里的代码可谓是 Vue.js 的灵魂，也是我们之后需要重点分析的地方。</p><h2 id="platform" tabindex="-1"><a class="header-anchor" href="#platform" aria-hidden="true">#</a> platform</h2><p>Vue.js 是一个跨平台的 MVVM 框架，它可以跑在 web 上，也可以配合 weex 跑在 native 客户端上。platform 是 Vue.js 的入口，2 个目录代表 2 个主要入口，分别打包成运行在 web 上和 weex 上的 Vue.js。</p><p>我们会重点分析 web 入口打包后的 Vue.js，对于 weex 入口打包的 Vue.js，感兴趣的同学可以自行研究。</p><h2 id="server" tabindex="-1"><a class="header-anchor" href="#server" aria-hidden="true">#</a> server</h2><p>Vue.js 2.0 支持了服务端渲染，所有服务端渲染相关的逻辑都在这个目录下。注意：这部分代码是跑在服务端的 Node.js，不要和跑在浏览器端的 Vue.js 混为一谈。</p><p>服务端渲染主要的工作是把组件渲染为服务器端的 HTML 字符串，将它们直接发送到浏览器，最后将静态标记&quot;混合&quot;为客户端上完全交互的应用程序。</p><h2 id="sfc" tabindex="-1"><a class="header-anchor" href="#sfc" aria-hidden="true">#</a> sfc</h2><p>通常我们开发 Vue.js 都会借助 webpack 构建， 然后通过 .vue 单文件来编写组件。</p><p>这个目录下的代码逻辑会把 .vue 文件内容解析成一个 JavaScript 的对象。</p><h2 id="shared" tabindex="-1"><a class="header-anchor" href="#shared" aria-hidden="true">#</a> shared</h2><p>Vue.js 会定义一些工具方法，这里定义的工具方法都是会被浏览器端的 Vue.js 和服务端的 Vue.js 所共享的。</p><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><p>从 Vue.js 的目录设计可以看到，作者把功能模块拆分的非常清楚，相关的逻辑放在一个独立的目录下维护，并且把复用的代码也抽成一个独立目录。</p><p>这样的目录设计让代码的阅读性和可维护性都变强，是非常值得学习和推敲的。</p>',23)],i={},l=(0,a(13860).Z)(i,[["render",function(e,r){return(0,t.wg)(),(0,t.iD)("div",null,s)}]])},13860:(e,r)=>{r.Z=(e,r)=>{const a=e.__vccOpts||e;for(const[e,t]of r)a[e]=t;return a}},37122:(e,r,a)=>{a.r(r),a.d(r,{data:()=>t});const t=JSON.parse('{"key":"v-1173c004","path":"/vue2/prepare/directory.html","title":"Vue.js 源码目录设计","lang":"zh-CN","frontmatter":{"author":"ustbhuangyi","summary":"Vue.js 源码目录设计 Vue.js 的源码都在 src 目录下，其目录结构如下。 compiler compiler 目录包含 Vue.js 所有编译相关的代码。它包括把模板解析成 ast 语法树，ast 语法树优化，代码生成等功能。 编译的工作可以在构建时做（借助 webpack、vue-loader 等辅助插件）；也可以在运行时做，使用包含构建功能","head":[["meta",{"property":"og:url","content":"https://0808200.xyz/vue2/prepare/directory.html"}],["meta",{"property":"og:site_name","content":"𝑀𝑟.𝑔𝑜𝑜𝑔𝑥ℎ"}],["meta",{"property":"og:title","content":"Vue.js 源码目录设计"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-08-29T09:14:21.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"ustbhuangyi"}],["meta",{"property":"article:modified_time","content":"2022-08-29T09:14:21.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"compiler","slug":"compiler","children":[]},{"level":2,"title":"core","slug":"core","children":[]},{"level":2,"title":"platform","slug":"platform","children":[]},{"level":2,"title":"server","slug":"server","children":[]},{"level":2,"title":"sfc","slug":"sfc","children":[]},{"level":2,"title":"shared","slug":"shared","children":[]},{"level":2,"title":"总结","slug":"总结","children":[]}],"git":{"createdTime":1661764461000,"updatedTime":1661764461000,"contributors":[{"name":"googxh","email":"gxh522@qq.com","commits":1}]},"readingTime":{"minutes":2.14,"words":642},"filePathRelative":"vue2/prepare/directory.md","localizedDate":"2022年8月29日"}')}}]);